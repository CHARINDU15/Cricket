{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/players';\n\n// Get all players\nexport const getAllPlayers = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching players: ' + error.message);\n  }\n};\n\n// Get player by ID\nexport const getPlayerById = async playerId => {\n  try {\n    const response = await axios.get(`${API_URL}/${playerId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching player: ' + error.message);\n  }\n};\n\n// Create a new player\nexport const createPlayer = async playerData => {\n  try {\n    const response = await axios.post(API_URL, playerData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error creating player: ' + error.message);\n  }\n};\n\n// Update a player\nexport const updatePlayer = async (playerId, playerData) => {\n  try {\n    const response = await axios.put(`${API_URL}/${playerId}`, playerData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error updating player: ' + error.message);\n  }\n};\n\n// Delete a player\nexport const deletePlayer = async playerId => {\n  try {\n    const response = await axios.delete(`${API_URL}/${playerId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error deleting player: ' + error.message);\n  }\n};\nexport const getTournamentSummary = async () => {\n  try {\n    const response = await axios.get('/api/tournament-summary');\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching tournament summary: ' + error.message);\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAllPlayers","response","get","data","error","Error","message","getPlayerById","playerId","createPlayer","playerData","post","updatePlayer","put","deletePlayer","delete","getTournamentSummary"],"sources":["C:/Users/USER/Downloads/Dashbord_Prmot/spirit11-fantasy-cricket-league/frontend/src/services/playerService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/players';\n\n// Get all players\nexport const getAllPlayers = async () => {\n    try {\n        const response = await axios.get(API_URL);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching players: ' + error.message);\n    }\n};\n\n// Get player by ID\nexport const getPlayerById = async (playerId) => {\n    try {\n        const response = await axios.get(`${API_URL}/${playerId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching player: ' + error.message);\n    }\n};\n\n// Create a new player\nexport const createPlayer = async (playerData) => {\n    try {\n        const response = await axios.post(API_URL, playerData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error creating player: ' + error.message);\n    }\n};\n\n// Update a player\nexport const updatePlayer = async (playerId, playerData) => {\n    try {\n        const response = await axios.put(`${API_URL}/${playerId}`, playerData);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error updating player: ' + error.message);\n    }\n};\n\n// Delete a player\nexport const deletePlayer = async (playerId) => {\n    try {\n        const response = await axios.delete(`${API_URL}/${playerId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error deleting player: ' + error.message);\n    }\n};\n\nexport const getTournamentSummary = async () => {\n    try {\n        const response = await axios.get('/api/tournament-summary');\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching tournament summary: ' + error.message);\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,cAAc;;AAE9B;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC/D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOC,QAAQ,IAAK;EAC7C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,IAAIS,QAAQ,EAAE,CAAC;IAC1D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC9D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,UAAU,IAAK;EAC9C,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAI,CAACZ,OAAO,EAAEW,UAAU,CAAC;IACtD,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC9D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMM,YAAY,GAAG,MAAAA,CAAOJ,QAAQ,EAAEE,UAAU,KAAK;EACxD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACe,GAAG,CAAC,GAAGd,OAAO,IAAIS,QAAQ,EAAE,EAAEE,UAAU,CAAC;IACtE,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC9D;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,YAAY,GAAG,MAAON,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACiB,MAAM,CAAC,GAAGhB,OAAO,IAAIS,QAAQ,EAAE,CAAC;IAC7D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC9D;AACJ,CAAC;AAED,OAAO,MAAMU,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACA,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,yBAAyB,CAAC;IAC3D,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,qCAAqC,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC1E;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}